<?php

/**
 * Update total points from admin dashboard area
 * For Admin
 */
// add_action('admin_post_itc_update_point', function() {
//     die( 'you must die' );
//     global $wpdb;
//     $nonce = sanitize_text_field( $_POST['nonce'] );
//     if( wp_verify_nonce( $nonce, 'update_point_nonce' ) ) {
//         $updated_point = $_POST['update_point'];

//         $wpdb->update(
//             $wpdb->prefix.'user_referred',
//             [ 'accept_total_points' => $updated_point ],
//             [ 'accepted_user_id'    => 37]
//         );

//         // $query = $wpdb->prepare(
//         //     "UPDATE $table_name SET accept_total_points = accept_total_points + %d WHERE accepted_user_id = %d LIMIT 1",
//         //     $updated_point,
//         //     $accepted_user_id
//         // );
    
//         // $wpdb->query($query);
        
//     } else {
//         die('Nonce not verified');
//     }

//     wp_redirect( admin_url('options-general.php?page=referral-options') );
// });


===============================================

$arr = [
    'raf_av'  => 1,
    'raf_rlid'        => 999

];
$token = md5( base64_encode( json_encode( $arr ) ) );
$query = http_build_query( $arr, '', '&');
$query .= '&token='.$token;

///
// $retrive = '';
// parse_str($query, $retrive);
// $rToken = $retrive['token'];
// unset( $retrive['token']);

// $testToken = md5( base64_encode( json_encode( $arr ) ) );

// if( $testToken === $rtoken){
//     echo 'Match';
// } else {
//     echo 'Not match';
// }

// echo '<pre>';
//       var_dump($token);
//       var_dump($query);
//       var_dump($retrive);
//       var_dump($testToken);
// echo '</pre>';

// TODO: new column while 

====================================


// Insert user referred data
function ic_insert_data_user_referred() {
    global $wpdb;

    if (is_login()) {
        return;
    }
    $id = get_current_user_id();

    $referrer_link_id = get_referred_data();
    $refer_link       = $wpdb->get_row($wpdb->prepare("SELECT * FROM {$wpdb->prefix}referral_links WHERE user_id = %d LIMIT 1", $referrer_link_id));

    if (is_null($refer_link)) {
        return;
    }

    $data = [
        'accepted_user_id'    => get_current_user_id(),
        'referred_by_user_id' => $refer_link->user_id,
        'refer_links_id'      => $refer_link->id,
    ];

    // if ( $email_verified && $age_verified ) {

    $old_rewards = get_total_points($id);
    // $wpdb->update(
    //     $wpdb->prefix . 'user_referred',
    //     array(
    //         'status'              => 1,
    //         'updated_at'          => date('Y-m-d H:i:s'),
    //         'accept_total_points' => $old_rewards->accept_total_points + 500,
    //         'accepted_user_id'    => get_current_user_id(),
    //         'referred_by_user_id' => $refer_link->user_id,
    //         'refer_links_id'      => $refer_link->id,
    //     ),
    //     array('accepted_user_id' => $id)
    // );

    // } else { //     $wpdb->update( //         $wpdb->prefix."user_referred", //         [ //             'referred_by_user_id' => $refer_link->user_id, //             'refer_links_id'      => $refer_link->id, //         ], //         array( 'accepted_user_id' => get_current_user_id() ), //         array( //             '%d', //             '%d' //         ), //         array( '%d' ) //     ); // } // $inserted = $wpdb->insert( "{$wpdb->prefix}user_referred", $data, ['%d', '%d', '%d'] ); // if ( !$inserted ) { //     return new \WP_Error( 'failed-to-insert', __( 'Failed to insert' ) ); // }
    return $wpdb->insert_id;
}

// TODO: this hooks should be user-login/register
// add_action( 'init', 'ic_insert_data_user_referred' );


======================================================

